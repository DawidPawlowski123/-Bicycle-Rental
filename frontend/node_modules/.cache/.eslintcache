[{"C:\\Users\\Dawid\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\Dawid\\Desktop\\frontend\\src\\App.js":"2","C:\\Users\\Dawid\\Desktop\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Home.js":"5","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\NoMatch.js":"6","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ShowUser.js":"7","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\CreateUser.js":"8","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Header.js":"9","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\CreateEquipment.js":"10","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Profile.js":"11","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ShowEquipment.js":"12","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Login.js":"13","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\EquipmentOption.js":"14","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ClientDetails.js":"15","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ClientOption.js":"16","C:\\Users\\Dawid\\Desktop\\frontend\\src\\services\\auth.service.js":"17","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\EquipmentDetails.js":"18"},{"size":510,"mtime":1639053411840,"results":"19","hashOfConfig":"20"},{"size":1849,"mtime":1644433306112,"results":"21","hashOfConfig":"20"},{"size":6047,"mtime":1639053364638,"results":"22","hashOfConfig":"20"},{"size":0,"mtime":1638280010885,"results":"23","hashOfConfig":"20"},{"size":330,"mtime":1644242853038,"results":"24","hashOfConfig":"20"},{"size":160,"mtime":1638280400689,"results":"25","hashOfConfig":"20"},{"size":5770,"mtime":1644315533343,"results":"26","hashOfConfig":"20"},{"size":6198,"mtime":1644242852410,"results":"27","hashOfConfig":"20"},{"size":3724,"mtime":1644244580148,"results":"28","hashOfConfig":"20"},{"size":4798,"mtime":1644398117948,"results":"29","hashOfConfig":"20"},{"size":1060,"mtime":1639056454904,"results":"30","hashOfConfig":"20"},{"size":5986,"mtime":1644433311502,"results":"31","hashOfConfig":"20"},{"size":5262,"mtime":1639081122835,"results":"32","hashOfConfig":"20"},{"size":1046,"mtime":1641496936916,"results":"33","hashOfConfig":"20"},{"size":8407,"mtime":1644432767919,"results":"34","hashOfConfig":"20"},{"size":1022,"mtime":1644242712732,"results":"35","hashOfConfig":"20"},{"size":870,"mtime":1639056433007,"results":"36","hashOfConfig":"20"},{"size":6303,"mtime":1644434077004,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ndn1nj",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},"C:\\Users\\Dawid\\Desktop\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\App.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\NoMatch.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ShowUser.js",["86","87","88"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, Button, ListGroup } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ShowUser() {\r\n\r\n\r\n\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const [err, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchedUsers();\r\n    }, []);\r\n\r\n    async function fetchedUsers() {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/clients\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    redirect: \"follow\",\r\n                }\r\n            );\r\n            let fetchedUsers = await response.json();\r\n            JSON.parse(JSON.stringify(fetchedUsers))\r\n            setUsers(fetchedUsers)\r\n            // setLoading(false);\r\n            console.log(\"elo\" + users);\r\n        } catch (err) {\r\n            console.log(err);\r\n            setError(err);\r\n        }\r\n    }\r\n\r\n    async function postDeleteClient2(url) {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteClient = (id) => {\r\n        postDeleteClient2(\r\n            `http://localhost:8080/clients/${id}`,\r\n        );\r\n    };\r\n\r\n  \r\n\r\n    let query = useQuery();\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\" mt-5 \">\r\n                <Col>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Dodaj użytkownika</Card.Title>\r\n                            <Button href=\"/CreateUser\" variant=\"primary\">Wybierz</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-5\">\r\n                <Col className=\"d-flex flex-wrap justify-content-between\">\r\n                    {users && users.map((user, index) => {\r\n                        return (\r\n                            <Card className=\"mb-4\" style={{ width: '25rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title>Użytkownik nr. {user.id}</Card.Title>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>Imię: {user.name}</ListGroup.Item>\r\n                                        <ListGroup.Item>Nazwisko: {user.lastname}</ListGroup.Item>\r\n                                        <ListGroup.Item>Id dokumentu: {user.idDocument}</ListGroup.Item>\r\n                                        <ListGroup.Item>Nr telefonu: {user.phoneNumber}</ListGroup.Item>\r\n                                        <ListGroup.Item>Emial: {user.email}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <Col className=\"d-flex justify-content-around\">\r\n                                        <Button variant=\"primary\"><Link style={{ color: \"white\", textDecoration: \"none\" }} to={`/ClientDetails?id=${user.id}`}>\r\n                                            Edytuj\r\n                                        </Link></Button>\r\n                                        <Button value={user.id} style={{ color: \"white\" }} variant=\"danger\"\r\n                                            onClick={ e => {\r\n                                            console.log(e.target.value);\r\n                                                swal({\r\n                                                    title: \"Jesteś pewien?\",\r\n                                                    text: \"Potwierdzenie oznacza usunięcie klienta\",\r\n                                                    icon: \"warning\",\r\n                                                    buttons: true,\r\n                                                    dangerMode: true,\r\n                                                })\r\n                                                    .then((willDelete) => {\r\n                                                        if (willDelete) {\r\n                                                            deleteClient(e.target.value)\r\n                                                            swal(\"Unit has been deleted\", {\r\n                                                                icon: \"success\",\r\n                                                            }).then(function () {\r\n                                                                window.location = \"ShowUser\";\r\n                                                            });;;\r\n                                                        }\r\n                                                    });\r\n                                            }}\r\n                                        >\r\n                                            Usuń\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\CreateUser.js",["89","90"],"import React, { useState } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    Name: yup.string().trim().required(\"Imię jest polem wymaganym\"),\r\n    Email: yup\r\n        .string()\r\n        .email(\"Email must be a valid email\")\r\n        .required(\"Email jest polem wymaganym\"),\r\n    Lastname: yup.string().trim().required(\"Nazwisko jest polem wymaganym\"),\r\n    Phonenumber: yup.string()\r\n    .required(\"Numer telefonu jest polem wymaganym\")\r\n    .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n    .min(9, \"Minimum 9 cyfr\")\r\n    .max(10, \"Maksimum 10 cyfr\"),\r\n    Iddocument: yup.string().trim().required(\"Id dokumentu jest polem wymaganym\"),\r\n});\r\n\r\n\r\nexport default function AddNewUser() {\r\n\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [fetchLoading, setFetchLoading] = useState(false);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    async function postData(url, data) {\r\n        setFetchLoading(true);\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.post(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                swal({\r\n                    text: \"User Added Succesfully!\",\r\n                    icon: \"success\",\r\n                }).then(function() {\r\n                    window.location = \"ShowUser\";\r\n                });;\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Adding User Failed\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (clientData) => {\r\n        const {\r\n            Email,\r\n            Name,\r\n            Lastname,\r\n            Phonenumber,\r\n            Iddocument,\r\n        } = clientData;\r\n        postData(\"http://localhost:8080/clients\", {\r\n            name: Name,\r\n            lastname : Lastname,\r\n            phoneNumber: Phonenumber,\r\n            idDocument: Iddocument,\r\n            email: Email,\r\n        });\r\n        console.log(postData);\r\n    };\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Imię\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Imię\"\r\n                                {...register(\"Name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Lastname\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwisko\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwisko\"\r\n                                {...register(\"Lastname\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Lastname?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Phonenumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer telefonu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwisko\"\r\n                                {...register(\"Phonenumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Phonenumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Iddocument\">\r\n                        <FloatingLabel size=\"lg\" label=\"Id dokumentu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Id dokumentu\"\r\n                                {...register(\"Iddocument\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Iddocument?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"Email\">\r\n                        <FloatingLabel size=\"lg\" label=\"Email\">\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"formInput border-1\"\r\n                                {...register(\"Email\")}\r\n                            />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Email?.message}</p>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Zatwierdź\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Header.js",["91"],"import { useState, useEffect } from \"react\";\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\r\n    }\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    setCurrentUser(undefined);\r\n    setShowModeratorBoard(false);\r\n    setShowAdminBoard(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"primary\"\r\n      variant=\"dark\"\r\n      className=\"d-flex align-items-center justify-content-evenly\"\r\n    >\r\n      <Container fluid className=\"custom_header\">\r\n        <Navbar.Brand>\r\n          <h1 className=\"mb-0\">\r\n            <Link to=\"/\" className=\"custom_title\">\r\n              WYPO.\r\n            </Link>\r\n          </h1>\r\n          <p className=\"mb-1 custom_subTitle d-none d-lg-block\">\r\n            Wypożyczalnia <br /> Rowerów\r\n          </p>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <>\r\n              {showAdminBoard && (\r\n                <NavLink to=\"/ShowUser\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Klient\r\n                </NavLink>\r\n              )}\r\n              {/* {showModeratorBoard && (\r\n                <NavLink to=\"/CreateUser\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Stwórz użytkownika\r\n                </NavLink>\r\n              )}\r\n              {showAdminBoard && (\r\n                <NavLink to=\"/ShowUser\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Wyświetl użytkowników\r\n                </NavLink>\r\n              )} */}\r\n              {showAdminBoard && (\r\n                <NavLink to=\"/ShowEquipment\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Asortyment\r\n                </NavLink>\r\n              )}\r\n              {/*showAdminBoard && (\r\n                <NavLink to=\"/CreateEquipment\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Stwórz wyposażenie\r\n                </NavLink>\r\n              )}\r\n              {showAdminBoard && (\r\n                <NavLink to=\"/ShowEquipment\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  Wyświetl wyposażenie\r\n                </NavLink>\r\n              )} */}\r\n            </>\r\n\r\n            {currentUser ? (\r\n              <>\r\n                <NavLink to=\"/profile\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                  {currentUser.username}\r\n\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                  activeClassName=\"link_active\"\r\n                  to=\"/login\"\r\n                  className=\"custom_link\"\r\n                  onClick={logOut}\r\n                >\r\n                  Logout\r\n                </NavLink>\r\n              </>\r\n            ) : (\r\n              <NavLink to=\"/login\" activeClassName=\"link_active\" className=\"custom_link\">\r\n                Login\r\n              </NavLink>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\CreateEquipment.js",["92","93"],"import React, { useState } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    Name: yup.string().trim().required(\"Nazwa jest polem wymaganym\"),\r\n    SerialNumber: yup.string().required(\"Email jest polem wymaganym\"),\r\n    PricePerHour: yup.string()\r\n    .required(\"Cena roweru za godzinę jest polem wymaganym\")\r\n    .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n    .min(2, \"Minimum 2 cyfr\")\r\n    .max(4, \"Maksimum 4 cyfr\"),\r\n});\r\n\r\n\r\nexport default function AddNewBike() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [fetchLoading, setFetchLoading] = useState(false);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    async function postData(url, data) {\r\n        setFetchLoading(true);\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.post(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                swal({\r\n                    text: \"User Added Succesfully!\",\r\n                    icon: \"success\",\r\n                }).then(function() {\r\n                    window.location = \"ShowEquipment\";\r\n                });;\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Adding User Failed\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (equipmentData) => {\r\n        const {\r\n            Name,\r\n            SerialNumber,\r\n            PricePerHour,\r\n        } = equipmentData;\r\n        postData(\"http://localhost:8080/equipment\", {\r\n            name: Name,\r\n            serialNumber : SerialNumber,\r\n            availabilityStatus: true,\r\n            pricePerHour: PricePerHour,\r\n            failureInformation: \"Brak\",\r\n        });\r\n        console.log(equipmentData);\r\n    };\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwa\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwa\"\r\n                                {...register(\"Name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"SerialNumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer seryjny\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Numer seryjny\"\r\n                                {...register(\"SerialNumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.SerialNumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"PricePerHour\">\r\n                        <FloatingLabel size=\"lg\" label=\"Cena za godzinę\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Cena za godzinę\"\r\n                                {...register(\"PricePerHour\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.PricePerHour?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Zatwierdź\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Profile.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ShowEquipment.js",["94","95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, Button, ListGroup } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nexport default function ShowEqupment() {\r\n\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n\r\n    const [equipment, setEquipment] = useState(null);\r\n\r\n    const [err, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchedEquipment();\r\n    }, []);\r\n\r\n    async function fetchedEquipment() {\r\n        try {\r\n            const response = await fetch(\r\n                \"http://localhost:8080/equipment\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    redirect: \"follow\",\r\n                }\r\n            );\r\n            let fetchedEquipment = await response.json();\r\n            JSON.parse(JSON.stringify(fetchedEquipment))\r\n            setEquipment(fetchedEquipment)\r\n            // setLoading(false);\r\n            console.log(\"elo\" + equipment);\r\n        } catch (err) {\r\n            console.log(err);\r\n            setError(err);\r\n        }\r\n    }\r\n\r\n\r\n    async function postDeleteClient2(url) {\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization' : `Bearer ${currentUser.accessToken} `,\r\n                },\r\n            });\r\n            console.log(response);\r\n        } catch (error) {\r\n            if (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteClient = (id) => {\r\n        postDeleteClient2(\r\n            `http://localhost:8080/equipment/${id}`,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            <Row className=\" mt-5 \">\r\n                <Col>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Dodaj asortyment</Card.Title>\r\n                            <Button href=\"/CreateEquipment\" variant=\"primary\">Wybierz</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"pt-5\">\r\n                <Col className=\"d-flex flex-wrap justify-content-between\">\r\n                    {equipment && equipment.map((equipment, index) => {\r\n                        return (\r\n                            <Card className=\"mb-4\" style={{ width: '25rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title>Sprzęt nr. {equipment.id}</Card.Title>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>Nazwa: {equipment.name}</ListGroup.Item>\r\n                                        <ListGroup.Item>Nr. seryjny: {equipment.serialNumber}</ListGroup.Item>\r\n                                        <ListGroup.Item>Cena za godzine: {equipment.pricePerHour}</ListGroup.Item>\r\n                                        <ListGroup.Item>Awaria: {equipment.failureInformation}</ListGroup.Item>\r\n                                        <ListGroup.Item>Dostępność: {equipment.availabilityStatus}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <Col className=\"d-flex justify-content-around\">\r\n                                        <Button variant=\"primary\"><Link style={{ color: \"white\", textDecoration: \"none\" }} to={`/EquipmentDetails?id=${equipment.id}`}>\r\n                                            Edytuj\r\n                                        </Link></Button>\r\n                                        <Button value={equipment.id} style={{ color: \"white\" }} variant=\"danger\"\r\n                                            onClick={e => {\r\n                                                console.log(e.target.value);\r\n                                                swal({\r\n                                                    title: \"Jesteś pewien?\",\r\n                                                    text: \"Potwierdzenie oznacza usunięcie klienta\",\r\n                                                    icon: \"warning\",\r\n                                                    buttons: true,\r\n                                                    dangerMode: true,\r\n                                                })\r\n                                                    .then((willDelete) => {\r\n                                                        if (willDelete) {\r\n                                                            deleteClient(e.target.value)\r\n                                                            swal(\"Unit has been deleted\", {\r\n                                                                icon: \"success\",\r\n                                                            }).then(function () {\r\n                                                                window.location = \"ShowEquipment\";\r\n                                                            });;;\r\n                                                        }\r\n                                                    });\r\n                                            }}\r\n                                        >\r\n                                            Usuń\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\Login.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\EquipmentOption.js",["97"],"import React, { useState } from \"react\";\r\nimport { Container, Button, Row, Col, Card } from \"react-bootstrap\";\r\n\r\n\r\nexport default function EquipmentOption() {\r\n    return (\r\n        <Container >\r\n            <Row className=\" mt-5 \">\r\n                <Col>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Dodaj asortyment</Card.Title>\r\n                            <Button href=\"/CreateEquipment\" variant=\"primary\">Wybierz</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card style={{ width: '20rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Wyświetl liste asortymentów</Card.Title>\r\n                            <Button href=\"/ShowEquipment\" variant=\"primary\">Wybierz</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ClientDetails.js",["98","99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().trim().required(\"Imię jest polem wymaganym\"),\r\n    email: yup\r\n        .string()\r\n        .email(\"Email must be a valid email\")\r\n        .required(\"Email jest polem wymaganym\"),\r\n    lastname: yup.string().trim().required(\"Nazwisko jest polem wymaganym\"),\r\n    phoneNumber: yup.string()\r\n        .required(\"Numer telefonu jest polem wymaganym\")\r\n        .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n        .min(9, \"Minimum 9 cyfr\")\r\n        .max(10, \"Maksimum 10 cyfr\"),\r\n    idDocument: yup.string().trim().required(\"Id dokumentu jest polem wymaganym\"),\r\n});\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ShowUser() {\r\n\r\n    let query = useQuery();\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (query.get(\"id\") === null) {\r\n            history.goBack();\r\n        }\r\n    }, [])\r\n\r\n    const [users, setUsers] = useState(null);\r\n    const [err, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchedUsers();\r\n    }, []);\r\n\r\n    async function fetchedUsers() {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:8080/clients/${query.get(\"id\")}`,\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    redirect: \"follow\",\r\n                }\r\n            );\r\n            let fetchedUsers = await response.json();\r\n            JSON.parse(JSON.stringify(fetchedUsers))\r\n            setUsers(fetchedUsers)\r\n            // setLoading(false);\r\n            console.log(\"elo\" + users);\r\n        } catch (error) {\r\n            setError(error);\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    async function postData(url, data) {\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.put(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 200) {\r\n                swal({\r\n                    text: \"Pomyślnie zmieniono dane użytkownika!\",\r\n                    icon: \"success\",\r\n                }).then(function () {\r\n                    window.location = \"ShowUser\";\r\n                });;\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Niepowodzenie\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (clientData) => {\r\n        const {\r\n            email,\r\n            name,\r\n            lastname,\r\n            phoneNumber,\r\n            idDocument,\r\n        } = clientData;\r\n        postData(`http://localhost:8080/clients/${query.get(\"id\")}`, {\r\n            id: query.get(\"id\"),\r\n            name: name,\r\n            lastname: lastname,\r\n            phoneNumber: phoneNumber,\r\n            idDocument: idDocument,\r\n            email: email,\r\n        });\r\n        console.log(postData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setName(users && users.name)\r\n    }, [users]);\r\n\r\n    const [name, setName] = useState(\"\"); // useState hook\r\n\r\n    // handle change event\r\n    const handleChange = (e) => {\r\n      e.preventDefault(); // prevent the default action\r\n      setName(e.target.value); // set name to e.target.value (event)\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Imię\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Imię\"\r\n                                defaultValue={users && users.name}\r\n                                onChange={handleChange}\r\n                                {...register(\"name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Lastname\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwisko\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwisko\"\r\n                                defaultValue={users && users.lastname}\r\n                                {...register(\"lastname\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.lastname?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Phonenumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer telefonu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Numer telefonu\"\r\n                                defaultValue={users && users.phoneNumber}\r\n                                {...register(\"phoneNumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.phoneNumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"IdDocument\">\r\n                        <FloatingLabel size=\"lg\" label=\"Id dokumentu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Id dokumentu\"\r\n                                defaultValue={users && users.idDocument}\r\n                                {...register(\"idDocument\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.idDocument?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"Email\">\r\n                    <Form.Label></Form.Label>\r\n                        <FloatingLabel size=\"lg\" label=\"Email\">\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"email\"\r\n                                className=\"formInput border-1\"\r\n                                defaultValue={users && users.email}\r\n                                {...register(\"email\")}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.email?.message}</p>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Zmień\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\ClientOption.js",[],"C:\\Users\\Dawid\\Desktop\\frontend\\src\\services\\auth.service.js",["101"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst register = (username, email, password) => {\r\n    return axios.post(API_URL + \"signup\", {\r\n        username,\r\n        email,\r\n        password,\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(API_URL + \"signin\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((response) => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n};","C:\\Users\\Dawid\\Desktop\\frontend\\src\\components\\EquipmentDetails.js",["102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    Name: yup.string().trim().required(\"Nazwa jest polem wymaganym\"),\r\n    SerialNumber: yup.string().required(\"Email jest polem wymaganym\"),\r\n    PricePerHour: yup.string()\r\n    .required(\"Cena roweru za godzinę jest polem wymaganym\")\r\n    .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n    .min(2, \"Minimum 2 cyfr\")\r\n    .max(4, \"Maksimum 4 cyfr\"),\r\n});\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function EquipmentDetails() {\r\n\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    let query = useQuery();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const [equipments, setEquipments] = useState(null);\r\n    const [err, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchedEquimpents();\r\n    }, []);\r\n\r\n    async function fetchedEquimpents() {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:8080/equipment/${query.get(\"id\")}`,\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\": \"application/json\",\r\n                        'Authorization' : `Bearer ${currentUser.accessToken} `,\r\n                    },\r\n                    redirect: \"follow\",\r\n                }\r\n            );\r\n            let fetchedEquimpents = await response.json();\r\n            JSON.parse(JSON.stringify(fetchedEquimpents))\r\n            setEquipments(fetchedEquimpents)\r\n            // setLoading(false);\r\n            console.log(\"elo\" + equipments);\r\n        } catch (error) {\r\n            setError(error);\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async function postData(url, data) {\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.post(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                swal({\r\n                    text: \"User Added Succesfully!\",\r\n                    icon: \"success\",\r\n                }).then(function() {\r\n                    window.location = \"ShowEquipment\";\r\n                });;\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Adding User Failed\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (equipmentData) => {\r\n        const {\r\n            Name,\r\n            SerialNumber,\r\n            PricePerHour,\r\n        } = equipmentData;\r\n        postData(`http://localhost:8080/equipment/${query.get(\"id\")}`, {\r\n            id: query.get(\"id\"),\r\n            name: Name,\r\n            serialNumber : SerialNumber,\r\n            availabilityStatus: true,\r\n            pricePerHour: PricePerHour,\r\n            failureInformation: \"Brak\",\r\n        });\r\n        console.log(equipmentData);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwa\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwa\"\r\n                                defaultValue={equipments && equipments.name}\r\n                                {...register(\"Name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"SerialNumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer seryjny\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Numer seryjny\"\r\n                                defaultValue={equipments && equipments.serialNumber}\r\n                                {...register(\"SerialNumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.SerialNumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"PricePerHour\">\r\n                        <FloatingLabel size=\"lg\" label=\"Cena za godzinę\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Cena za godzinę\"\r\n                                defaultValue={equipments && equipments.pricePerHour}\r\n                                {...register(\"PricePerHour\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.PricePerHour?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Zatwierdź\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":18,"column":12,"nodeType":"110","messageId":"111","endLine":18,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":22,"column":8,"nodeType":"114","endLine":22,"endColumn":10,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":72,"column":9,"nodeType":"110","messageId":"111","endLine":72,"endColumn":14},{"ruleId":"108","severity":1,"message":"117","line":30,"column":12,"nodeType":"110","messageId":"111","endLine":30,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":31,"column":12,"nodeType":"110","messageId":"111","endLine":31,"endColumn":24},{"ruleId":"108","severity":1,"message":"119","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":28},{"ruleId":"108","severity":1,"message":"117","line":23,"column":12,"nodeType":"110","messageId":"111","endLine":23,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":24,"column":12,"nodeType":"110","messageId":"111","endLine":24,"endColumn":24},{"ruleId":"108","severity":1,"message":"120","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":17,"column":12,"nodeType":"110","messageId":"111","endLine":17,"endColumn":15},{"ruleId":"112","severity":1,"message":"121","line":21,"column":8,"nodeType":"114","endLine":21,"endColumn":10,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"124","line":38,"column":8,"nodeType":"114","endLine":38,"endColumn":10,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"113","line":45,"column":8,"nodeType":"114","endLine":45,"endColumn":10,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"127","line":131,"column":12,"nodeType":"110","messageId":"111","endLine":131,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":36,"column":1,"nodeType":"130","endLine":41,"endColumn":3},{"ruleId":"108","severity":1,"message":"131","line":8,"column":23,"nodeType":"110","messageId":"111","endLine":8,"endColumn":27},{"ruleId":"112","severity":1,"message":"132","line":46,"column":8,"nodeType":"114","endLine":46,"endColumn":10,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'err' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchedUsers'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'query' is assigned a value but never used.","'loading' is assigned a value but never used.","'fetchLoading' is assigned a value but never used.","'showModeratorBoard' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchedEquipment'. Either include it or remove the dependency array.",["137"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'query'. Either include them or remove the dependency array.",["138"],["139"],"'name' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchedEquimpents'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"141","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [fetchedUsers]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchedEquipment]",{"range":"152","text":"153"},"Update the dependencies array to be: [history, query]",{"range":"154","text":"155"},{"range":"156","text":"151"},"Update the dependencies array to be: [fetchedEquimpents]",{"range":"157","text":"158"},[532,534],"[fetchedUsers]",[575,577],"[fetchedEquipment]",[1317,1319],"[history, query]",[1474,1476],[1377,1379],"[fetchedEquimpents]"]