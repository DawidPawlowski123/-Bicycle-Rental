{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dawid\\\\Desktop\\\\frontend\\\\src\\\\components\\\\CreateEquipment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  Name: yup.string().trim().required(\"Nazwa jest polem wymaganym\"),\n  SerialNumber: yup.string().required(\"Email jest polem wymaganym\"),\n  PricePerHour: yup.string().required(\"Cena roweru za godzinę jest polem wymaganym\").matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\").min(2, \"Minimum 2 cyfr\").max(4, \"Maksimum 4 cyfr\")\n});\nexport default function AddNewBike() {\n  _s();\n\n  var _errors$Name, _errors$SerialNumber, _errors$PricePerHour;\n\n  const [loading, setLoading] = useState(true);\n  const [fetchLoading, setFetchLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  async function postData(url, data) {\n    setFetchLoading(true);\n    let dataJson = JSON.stringify(data);\n\n    try {\n      const response = await axios.post(url, dataJson, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n\n      if (response.status === 201) {\n        swal({\n          text: \"User Added Succesfully!\",\n          icon: \"success\"\n        }).then(function () {\n          window.location = \"ShowEquipment\";\n        });\n        ;\n        setLoading(false);\n      }\n    } catch (error) {\n      if (error) {\n        swal({\n          text: \"Adding User Failed\",\n          icon: \"warning\"\n        });\n        console.log(error);\n      }\n    }\n  }\n\n  const onSubmit = equipmentData => {\n    const {\n      Name,\n      SerialNumber,\n      PricePerHour\n    } = equipmentData;\n    postData(\"http://localhost:8080/equipment\", {\n      name: Name,\n      serialNumber: SerialNumber,\n      availabilityStatus: true,\n      pricePerHour: PricePerHour,\n      failureInformation: \"Brak\"\n    });\n    console.log(equipmentData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex align-items-center justify-content-start\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex flex-column\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"Name\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Nazwa\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Nazwa\",\n              ...register(\"Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"SerialNumber\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Numer seryjny\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Numer seryjny\",\n              ...register(\"SerialNumber\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$SerialNumber = errors.SerialNumber) === null || _errors$SerialNumber === void 0 ? void 0 : _errors$SerialNumber.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"PricePerHour\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Cena za godzin\\u0119\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Cena za godzin\\u0119\",\n              ...register(\"PricePerHour\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$PricePerHour = errors.PricePerHour) === null || _errors$PricePerHour === void 0 ? void 0 : _errors$PricePerHour.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Zatwierd\\u017A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewBike, \"VJaLp3qiTMPFRS5JXc0QmnFckCc=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNewBike;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewBike\");","map":{"version":3,"sources":["C:/Users/Dawid/Desktop/frontend/src/components/CreateEquipment.js"],"names":["React","useState","Container","Button","Row","Form","FloatingLabel","swal","axios","useForm","yupResolver","yup","schema","object","shape","Name","string","trim","required","SerialNumber","PricePerHour","matches","min","max","AddNewBike","loading","setLoading","fetchLoading","setFetchLoading","register","handleSubmit","formState","errors","resolver","postData","url","data","dataJson","JSON","stringify","response","post","headers","console","log","status","text","icon","then","window","location","error","onSubmit","equipmentData","name","serialNumber","availabilityStatus","pricePerHour","failureInformation","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    Name: yup.string().trim().required(\"Nazwa jest polem wymaganym\"),\r\n    SerialNumber: yup.string().required(\"Email jest polem wymaganym\"),\r\n    PricePerHour: yup.string()\r\n    .required(\"Cena roweru za godzinę jest polem wymaganym\")\r\n    .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n    .min(2, \"Minimum 2 cyfr\")\r\n    .max(4, \"Maksimum 4 cyfr\"),\r\n});\r\n\r\n\r\nexport default function AddNewBike() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [fetchLoading, setFetchLoading] = useState(false);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    async function postData(url, data) {\r\n        setFetchLoading(true);\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.post(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                swal({\r\n                    text: \"User Added Succesfully!\",\r\n                    icon: \"success\",\r\n                }).then(function() {\r\n                    window.location = \"ShowEquipment\";\r\n                });;\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Adding User Failed\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (equipmentData) => {\r\n        const {\r\n            Name,\r\n            SerialNumber,\r\n            PricePerHour,\r\n        } = equipmentData;\r\n        postData(\"http://localhost:8080/equipment\", {\r\n            name: Name,\r\n            serialNumber : SerialNumber,\r\n            availabilityStatus: true,\r\n            pricePerHour: PricePerHour,\r\n            failureInformation: \"Brak\",\r\n        });\r\n        console.log(equipmentData);\r\n    };\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwa\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwa\"\r\n                                {...register(\"Name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"SerialNumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer seryjny\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Numer seryjny\"\r\n                                {...register(\"SerialNumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.SerialNumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"PricePerHour\">\r\n                        <FloatingLabel size=\"lg\" label=\"Cena za godzinę\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Cena za godzinę\"\r\n                                {...register(\"PricePerHour\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.PricePerHour?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Zatwierdź\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}