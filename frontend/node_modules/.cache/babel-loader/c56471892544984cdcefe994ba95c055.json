{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dawid\\\\Desktop\\\\frontend\\\\src\\\\components\\\\CreateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  Name: yup.string().trim().required(\"Imię jest polem wymaganym\"),\n  Email: yup.string().email(\"Email must be a valid email\").required(\"Email jest polem wymaganym\"),\n  Lastname: yup.string().trim().required(\"Nazwisko jest polem wymaganym\"),\n  Phonenumber: yup.string().required(\"Numer telefonu jest polem wymaganym\").matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\").min(9, \"Minimum 9 cyfr\").max(10, \"Maksimum 10 cyfr\"),\n  Iddocument: yup.string().trim().required(\"Id dokumentu jest polem wymaganym\")\n});\nexport default function AddNewUser() {\n  _s();\n\n  var _errors$Name, _errors$Lastname, _errors$Phonenumber, _errors$Iddocument, _errors$Email;\n\n  const [loading, setLoading] = useState(true);\n  const [fetchLoading, setFetchLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  async function postData(url, data) {\n    setFetchLoading(true);\n    let dataJson = JSON.stringify(data);\n\n    try {\n      const response = await axios.post(url, dataJson, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n\n      if (response.status === 201) {\n        swal({\n          text: \"User Added Succesfully!\",\n          icon: \"success\"\n        }).then(function () {\n          window.location = \"ShowUser\";\n        });\n        ;\n        setLoading(false);\n      }\n    } catch (error) {\n      if (error) {\n        swal({\n          text: \"Adding User Failed\",\n          icon: \"warning\"\n        });\n        console.log(error);\n      }\n    }\n  }\n\n  const onSubmit = clientData => {\n    const {\n      Email,\n      Name,\n      Lastname,\n      Phonenumber,\n      Iddocument\n    } = clientData;\n    postData(\"http://localhost:8080/clients\", {\n      name: Name,\n      lastname: Lastname,\n      phoneNumber: Phonenumber,\n      idDocument: Iddocument,\n      email: Email\n    });\n    console.log(postData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex align-items-center justify-content-start\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex flex-column\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"Name\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Imi\\u0119\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Imi\\u0119\",\n              ...register(\"Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"Lastname\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Nazwisko\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Nazwisko\",\n              ...register(\"Lastname\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Lastname = errors.Lastname) === null || _errors$Lastname === void 0 ? void 0 : _errors$Lastname.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"Phonenumber\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Numer telefonu\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Nazwisko\",\n              ...register(\"Phonenumber\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Phonenumber = errors.Phonenumber) === null || _errors$Phonenumber === void 0 ? void 0 : _errors$Phonenumber.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 mt-3\",\n          controlId: \"Iddocument\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Id dokumentu\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"lg\",\n              className: \"formInput border-1\",\n              type: \"text\",\n              placeholder: \"Id dokumentu\",\n              ...register(\"Iddocument\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Iddocument = errors.Iddocument) === null || _errors$Iddocument === void 0 ? void 0 : _errors$Iddocument.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"Email\",\n          children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n            size: \"lg\",\n            label: \"Email\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              className: \"formInput border-1\",\n              ...register(\"Email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"custom_error\",\n            children: (_errors$Email = errors.Email) === null || _errors$Email === void 0 ? void 0 : _errors$Email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Zatwierd\\u017A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewUser, \"VJaLp3qiTMPFRS5JXc0QmnFckCc=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNewUser;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewUser\");","map":{"version":3,"sources":["C:/Users/Dawid/Desktop/frontend/src/components/CreateUser.js"],"names":["React","useState","Container","Button","Row","Form","FloatingLabel","swal","axios","useForm","yupResolver","yup","schema","object","shape","Name","string","trim","required","Email","email","Lastname","Phonenumber","matches","min","max","Iddocument","AddNewUser","loading","setLoading","fetchLoading","setFetchLoading","register","handleSubmit","formState","errors","resolver","postData","url","data","dataJson","JSON","stringify","response","post","headers","console","log","status","text","icon","then","window","location","error","onSubmit","clientData","name","lastname","phoneNumber","idDocument","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Button, Row, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    Name: yup.string().trim().required(\"Imię jest polem wymaganym\"),\r\n    Email: yup\r\n        .string()\r\n        .email(\"Email must be a valid email\")\r\n        .required(\"Email jest polem wymaganym\"),\r\n    Lastname: yup.string().trim().required(\"Nazwisko jest polem wymaganym\"),\r\n    Phonenumber: yup.string()\r\n    .required(\"Numer telefonu jest polem wymaganym\")\r\n    .matches(/^[0-9]+$/, \"Musi zawierać tylko cyfry\")\r\n    .min(9, \"Minimum 9 cyfr\")\r\n    .max(10, \"Maksimum 10 cyfr\"),\r\n    Iddocument: yup.string().trim().required(\"Id dokumentu jest polem wymaganym\"),\r\n});\r\n\r\n\r\nexport default function AddNewUser() {\r\n\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [fetchLoading, setFetchLoading] = useState(false);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    async function postData(url, data) {\r\n        setFetchLoading(true);\r\n        let dataJson = JSON.stringify(data);\r\n        try {\r\n            const response = await axios.post(url, dataJson, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                swal({\r\n                    text: \"User Added Succesfully!\",\r\n                    icon: \"success\",\r\n                }).then(function() {\r\n                    window.location = \"ShowUser\";\r\n                });;\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            if (error) {\r\n                swal({ text: \"Adding User Failed\", icon: \"warning\" });\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = (clientData) => {\r\n        const {\r\n            Email,\r\n            Name,\r\n            Lastname,\r\n            Phonenumber,\r\n            Iddocument,\r\n        } = clientData;\r\n        postData(\"http://localhost:8080/clients\", {\r\n            name: Name,\r\n            lastname : Lastname,\r\n            phoneNumber: Phonenumber,\r\n            idDocument: Iddocument,\r\n            email: Email,\r\n        });\r\n        console.log(postData);\r\n    };\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"d-flex align-items-center justify-content-start\">\r\n                <Form\r\n                    className=\"d-flex flex-column\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Name\">\r\n                        <FloatingLabel size=\"lg\" label=\"Imię\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Imię\"\r\n                                {...register(\"Name\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Name?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Lastname\">\r\n                        <FloatingLabel size=\"lg\" label=\"Nazwisko\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwisko\"\r\n                                {...register(\"Lastname\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Lastname?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Phonenumber\">\r\n                        <FloatingLabel size=\"lg\" label=\"Numer telefonu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nazwisko\"\r\n                                {...register(\"Phonenumber\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Phonenumber?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 mt-3\" controlId=\"Iddocument\">\r\n                        <FloatingLabel size=\"lg\" label=\"Id dokumentu\">\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                className=\"formInput border-1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Id dokumentu\"\r\n                                {...register(\"Iddocument\")} />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Iddocument?.message}</p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"Email\">\r\n                        <FloatingLabel size=\"lg\" label=\"Email\">\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"formInput border-1\"\r\n                                {...register(\"Email\")}\r\n                            />\r\n                        </FloatingLabel>\r\n                        <p className=\"custom_error\">{errors.Email?.message}</p>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Zatwierdź\r\n                    </Button>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}